name: Build Library

on:
  workflow_call:
    inputs:
      library_name:
        required: true
        type: string
      repo_url:
        required: true
        type: string
      version:
        required: true
        type: string
      cmake_args:
        required: false
        type: string
      depends_on:
        required: false
        type: string
      apt_packages:
        description: 'A space-separated list of APT packages to install.'
        required: false
        type: string
        default: ''

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: 'Linux'
            os: ubuntu-latest
            build_shared_libs: 'OFF'
    runs-on: ${{ matrix.os }}
    steps:
      - name: Install CMake and Ninja
        uses: lukka/get-cmake@latest

      - name: Install APT dependencies
        # This step will only run if the 'apt_packages' input is not empty
        if: inputs.apt_packages != ''
        run: |
          sudo apt-get update
          sudo apt-get install -y ${{ inputs.apt_packages }}

      - name: Set lib_type
        id: set-lib-type
        run: |
          if [ "${{ matrix.build_shared_libs }}" = "ON" ]; then
            echo "lib_type=Shared" >> $GITHUB_OUTPUT
          else
            echo "lib_type=Static" >> $GITHUB_OUTPUT
          fi

      - name: Create Archive of Library
        run: |
          git clone -b v${{ inputs.version }} --depth 1 ${{ inputs.repo_url }} ${{ inputs.library_name }}
          cd ${{ inputs.library_name }}
          cmake -G Ninja -S . -B build \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_POSITION_INDEPENDENT_CODE=ON \
            -DCMAKE_INSTALL_PREFIX=${{ inputs.library_name }} \
            -DBUILD_SHARED_LIBS=${{ matrix.build_shared_libs }} \
            ${{ inputs.cmake_args }}
          cmake --build build
          cmake --install build
          tar -czf ../${{ inputs.library_name }}-${{ matrix.name }}-${{ steps.set-lib-type.outputs.lib_type }}.tar.gz ${{ inputs.library_name }}

